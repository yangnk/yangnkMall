###显示SQL语句部分
log4j.logger.com.ibatis=DEBUG
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.Java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG


# MyBatis 配置
mybatis.type-aliases-package=com.yangnk.order.mapper
#mybatis.config-location=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

# seata配置
# 是否启用seata，默认为true
seata.enabled=true

# 是否启用数据源自动代理，默认为true
seata.enable-auto-data-source-proxy=true

# seata全局事务分组`
seata.tx-service-group=default

# 配置中心配置
seata.config.type=nacos
seata.config.nacos.server-addr=42.192.46.163:8848
seata.config.nacos.group=SEATA_GROUP
seata.config.nacos.username=nacos
seata.config.nacos.password=nacos
seata.config.nacos.namespace=seata

# 注册中心配置
seata.registry.type=nacos
seata.registry.nacos.application=seata-server
seata.registry.nacos.server-addr=42.192.46.163:8848
seata.registry.nacos.namespace=seata
seata.registry.nacos.group=SEATA_GROUP
seata.registry.nacos.username=nacos
seata.registry.nacos.password=nacos

# 服务配置
seata.service.vgroup-mapping.my_test_tx_group=default
seata.service.disable-global-transaction=false

# 客户端配置
seata.client.rm.report-success-enable=false


## seata
## 注册中心
## 配置seata的注册中心为nacos，告诉seata client怎么去访问seata server
#seata.registry.type=nacos
#seata.registry.nacos.server-addr=42.192.46.163:8848
#seata.registry.nacos.application=seata-server
#seata.registry.nacos.username=nacos
#seata.registry.nacos.password=nacos
#seata.registry.nacos.group=SEATA_GROUP
#seata.registry.nacos.namespace=seata
#
#
## 配置中心
## 配置seata的配置中心为nacos
#seata.config.type=nacos
#seata.config.nacos.server-addr=42.192.46.163:8848
#seata.config.nacos.group=DEFAULT_GROUP
#seata.config.nacos.namespace=seata
#seata.config.nacos.username=nacos
#seata.config.nacos.password=nacos
#
## 服务配置
##seata.service.vgroup-mapping.xxxx-global-biz-tx-group=default
##seata.service.grouplist.default=@spring.cloud.seata.server.grouplist@
##seata.service.enable-degrade=false
##seata.service.disable-global-transaction=false
#seata.tx-service-group=default


server.port=9001
spring.application.name=yangnkMall-order
spring.cloud.nacos.discovery.server-addr=42.192.46.163:8848
spring.main.allow-bean-definition-overriding=true

# darasource 配置
spring.datasource.url=jdbc:mysql://42.192.46.163:3306/mall_db?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=666666
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#feign start
feign.client.config.feignName.connectTimeout=5000
feign.client.config.feignName.readTimeout=5000
#日志级别
feign.client.config.feignName.loggerLevel=full
#feign.client.config.feignName.errorDecoder=com.example.SimpleErrorDecoder
#feign.client.config.feignName.retryer=com.example.SimpleRetryer
#feign.client.config.feignName.defaultQueryParameters.query=queryValue
#feign.client.config.feignName.defaultRequestHeaders.header=headerValue
#feign.client.config.feignName.requestInterceptors[0]=com.example.FooRequestInterceptor
#feign.client.config.feignName.requestInterceptors[1]=com.example.BarRequestInterceptor
#feign.client.config.feignName.decode404=false
#feign.client.config.feignName.encoder=com.example.SimpleEncoder
#feign.client.config.feignName.decoder=com.example.SimpleDecoder
#feign.client.config.feignName.contract=com.example.SimpleContract

#Ribbon start
#请求时间5秒
ribbon.ReadTimeout=5000
#连接时间5秒
ribbon.ConnectTimeout=5000